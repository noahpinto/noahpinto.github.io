{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <div #map style=\\\"width:100%;height:400px\\\"></div>\\n\\n  <ag-grid-angular \\n  style=\\\"width: 100%; height: 500px;\\\" \\n  class=\\\"ag-theme-balham\\\"\\n  [rowData]=\\\"rowData| async\\\" \\n  [columnDefs]=\\\"columnDefs\\\"\\n  rowSelection=\\\"multiple\\\"\\n  >\\n</ag-grid-angular>\\n\\n</div>\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport {} from 'googlemaps';\nimport { ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as MarkerClusterer from \"@google/markerclusterer\"\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n public curlatlong;\n  title = 'ag';\n  @ViewChild('map') mapElement: any;\n map: google.maps.Map;\ncolumnDefs = [\n  {headerName: 'value', field: 'value',sortable: true, filter: true,checkboxSelection: true },\n  {headerName: 'label', field: 'label',sortable: true, filter: true },\n  {headerName: 'lat', field: 'lat',sortable: true, filter: true},\n  {headerName: 'long', field: 'long',sortable: true, filter: true}\n];\n\nrowData: any;\n\nmarkers:any;\n\nconstructor(private http: HttpClient) {\n\n  this.rowData=this.http.get('https://private-37ba9-assignment39.apiary-mock.com/venues') ;\n  this.http.get('https://private-37ba9-assignment39.apiary-mock.com/venues').subscribe(data=>\n{\n  \n  for(let i=0;data;i++){\n\n   \nthis.curlatlong = new google.maps.LatLng(data[i].lat, data[i].long);\n  \n      let marker;\n      marker = new google.maps.Marker({\n      map: this.map,\n      animation: google.maps.Animation.DROP,\n      position: this.curlatlong\n    });\n    let content = \"<h4> \" + data[i].label + \"</h4>\";\n    this.addInfoWindow(marker, content);\n \n  // var mcOptions = {\n  //   imagePath: 'https://cdn.rawgit.com/googlemaps/js-marker-clusterer/gh-pages/images/m1.png' };\n  // var markerCluster = new MarkerClusterer(this.map, marker, mcOptions);\n    \n   \n  }\n  \n\n}\n);\n \n      }\n\n      addInfoWindow(marker, content) {\n        let infoWindow = new google.maps.InfoWindow({\n          content: content\n        });\n    \n        google.maps.event.addListener(marker, 'click', () => {\n          infoWindow.open(this.map, marker);\n        });\n        \n       \n    \n      }\n\nngOnInit(): void {\n  const mapProperties = {\n    center: new google.maps.LatLng(49.200007, -2.1136679999999615),\n    zoom: 4,\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n};\n\nthis.map = new google.maps.Map(this.mapElement.nativeElement,mapProperties);\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { HttpClientModule } from '@angular/common/http';\n\ndeclare var google: any;\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AgGridModule.withComponents([])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\ndeclare var google: any;\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
